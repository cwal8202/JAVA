comparable 은 import 안하고 
compator은 import 한 이유는
comparable은 lang안에 잇어서 바로 쓸수 있고
compator은 util안에 있어서 import해야 한


comparable로 몸무게 비교했다
근데 키를 또 비교하고 싶으면 comparable 은 이미 몸무게 비교가 됐다.
Arrays.sort를 쓰고 싶은데 Arrays.sort는 comparable 말고도 comparator 값을 쓴다.
comparator은 추상 메소드로 compare(obj1, obj2)를 가지고 있으므로
compare을 쓴다.

compareto는 자기 자신과 상대를 비교한다고 하면 compare은 대상 2개를 비교하는 심판자이다.



 간단하니깐 1회성 클래스로 만들면 좋지 않을까? 
클래스를 1회용으로 쓸 수 있겠금 메인메소드 안에 클래스를 선언하고 정의하는게 가능하다. 
이클래스는 진짜 메인메소드에서만 쓸수 잇는 1회용

- 지역클래스 로컬클래스라고 한다. 지역변수와 똑같이 지역에서만 쓸수 있다.

클래스 이름 안적고 사용가능하다?!


아주 간단한 클래스라도 만들려면 파일 만들고 이름 짓고 해야한다

일단 파일을 안만들고 바로 슬려면 main 클래스 안에 로컬클래스를 만들수 있다
즉 main안에서 클래스를 만들수 있다. 지역변수처럼!


static은 객체의 영향을 받는게 아니다
그냥 이름만 빌린거지 그자체가 값을 가지는 것이다.


공통적인 메소드를 하지만 동작이 다르다 그래서 바디가 없는 추상메소드를 만든다
근데 추상메소드는 추상클래스만 된다

근데 동작에만 집중을해서 동작만 따로 빼서 인터페이스를 만든것이다.

추상적인 행동과 필드 메소드가 생성가능하다.

static은 정적이다. 객체를 만들어라 참조하고 변경해라 동작해라 등의 흐름이 있다
그흐름에서 

흐름하고 무관하게 만들어진다

class가 load하는 시점에 jbm이라는 애가 만든다.
정적인 애들이 객체와 무관한 곳에다가 static을 만든다

static 은 이미 만들어 놓은것이다. 클래스를 만들다 이미 있는정적 메소드이다

static 