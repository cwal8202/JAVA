private 정보를 바꾸지 못하게 하고 바꿀수 있는 메소드 


빅스비를 부르면 빅스비가 호출되고
거기서 000에게 전화해줘 하면


휴대폰 전화버튼 - 목록 - 000 이름 - 전화버튼 이라는 과정이 저장되어 있는 메소드에서

000에 내가 전화걸고 싶은 xxx의 이름값만 입력하면 자동으로 전화를 걸어주는것과 같다.




// public Dog(String name, String breed, int age) {
	// name = name;
	// breed = breed;
	// age = age;
// }	이렇게 되면 name;은 파라미터의 name;을 불러오는 것이다
// 결국 필드에 있는 name을 불러온게 아니므로 아무것도 없는 값인 null이 되게 된다.


값이 안변하게끔 할려면 setter를 없애주고
값이 안나오게끔 할려면 getter를 없애주면 된다.



처음에 dog d1을 인스턴스화 시킨다. ( 이름, 출생, 나이라는 정보를 쓸 수 있게 된다.)

d1.setName("최장호", "한국"); 을 호출하였다. 여기서 자바는 이 구조의 형태를 찾는다.
구조를 찾은 후 파라미터에 지정되어 있는 값들을 순서에 따라 대조한다.


public void setName(String n, String b) {
		breed = b;
		name = n;
	}


String n이 최장호, String b가 한국이다
b는 breed가 되고 n은 name이 되어서 필드값 name과 breed는 최장호와 한국을 가르키게 된다.

	public String getName() {
		return name;
	}

이 흐름 또한 getName() 으로 시작해서 name이라는 값을 내보낸다.
System.out.print(d2.getBreed());
여기서 getBreed()의 값을 출력한다

흐름은 처음에 구조 대조를 한 후 ()안에 값을 읽는다. 만약 해당되는 메소드가 있으면
{} 중괄호 안을 읽는다.

흐름은 처음에 호출을 하고 호출되는 메소드를 찾는다. 메소드를 찾고 ()괄호 안의 값을 대입하거나 대조한다
대조한 후 맞으면 {} 중괄호 안을 읽는다.
